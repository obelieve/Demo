apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId "com.zxy.demo"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file("zxy.jks")
            storePassword "123456"
            keyAlias "key0"
            keyPassword "123456"
        }
    }

    buildTypes {

        debug {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "default"
    productFlavors {

        app {
            dimension "default"
            applicationId "com.zxy.demo"
            versionCode 1
            versionName "1.0"
            //buildConfigField 'String', 'SERVER_URL_DOMAIN', '"https://www.xxx.com"'
        }
    }

    android.applicationVariants.all { variant ->
        //保存混淆映射文件
        if (variant.getBuildType().isMinifyEnabled()) {
            variant.assemble.doLast {
                copy {
                    from variant.mappingFile
                    into "${projectDir}/mappings"
                    rename { String fileName ->
                        "mapping-${variant.name}_${variant.versionName}_${variant.versionCode}.txt"
                    }
                }
            }
        }
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = outputFile.name.replace(".apk", "_${variant.versionName}_${variant.versionCode}.apk")
                outputFileName = fileName
            }
        }
    }
    buildscript {
        configurations.all {
            resolutionStrategy {
                force("net.sf.proguard:proguard-base:6.2.0")
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //Android
    implementation project(path: ':frame')
    implementation "androidx.appcompat:appcompat:${rootProject.ext.dependencies.androidxAppcompat}"
    implementation "com.android.support.constraint:constraint-layout:${rootProject.ext.dependencies.constraintLayout}"
    implementation "com.google.android.material:material:${rootProject.ext.dependencies.material}"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:${rootProject.ext.dependencies.swiperefreshlayout}"
    implementation "com.github.lihangleo2:ShadowLayout:${rootProject.ext.dependencies.lihangleo2_ShadowLayout}"
    //第三方
    implementation "com.daimajia.numberprogressbar:${rootProject.ext.dependencies.numberprogressbar}"
    implementation "com.jakewharton:butterknife:${rootProject.ext.dependencies.butterknife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.ext.dependencies.butterknife}"
    implementation "com.github.bumptech.glide:glide:${rootProject.ext.dependencies.glide}"
    annotationProcessor "com.github.bumptech.glide:compiler:${rootProject.ext.dependencies.glide}"
    implementation "jp.wasabeef:glide-transformations:${rootProject.ext.dependencies.glide_transformations}"
    implementation "com.airbnb.android:lottie:${rootProject.ext.dependencies.lottie}"
    implementation project(path: ':mockapi')

}
